from aiogram.types import Message
from utils.tours import get_labels_by_callback_path
from .tours import get_prev_data


def format_final_message(message: Message, data: list[str]):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∫—Ä–∞—Å–∏–≤–æ–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç—É—Ä–∞.

    Args:
        message (aiogram.types.Message): –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Telegram-–±–æ—Ç–∞.
        data (list): –°–ø–∏—Å–æ–∫ callback_data, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –ø—É—Ç—å –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Ç—É—Ä–∞,
                     –Ω–∞–ø—Ä–∏–º–µ—Ä: ['more_6', 'full_mangal', 'kushina']

    Returns:
        str: HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏–ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
    """
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –º–µ—Ç–∫–∏ –∏–∑ callback-–ø—É—Ç–∏
    print("–ü—Ä–∏—à–µ–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    prev_data = get_prev_data(data)

    result = get_labels_by_callback_path(prev_data)

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    name = ""
    if message.contact:
        if message.contact.first_name:
            name += message.contact.first_name
        if message.contact.last_name:
            name += " " + message.contact.last_name

    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
    tg_username = message.from_user.username
    username_link = f"@{tg_username}" if tg_username else "(–Ω–µ—Ç)"

    username = message.from_user.username
    username_link = f"@{username}" if username else "<b> –ù–µ—Ç </b>"
    phone_number = (
        message.contact.phone_number if message.contact else "<b> –ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω </b>"
    )
    name = message.contact.first_name if message.contact else "<b> –ù–µ —É–∫–∞–∑–∞–Ω–æ </b>"
    time = None
    if len(result) == 4:
        time = result[3]

        formatted_message = (
            f"<b>üì¨ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–∞</b>\n\n"
            f"<b>üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫:</b> {result[0]}\n\n"
            f"<b>üé´ –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç—É—Ä:</b> {result[1]}\n\n"
            f"<b>üìç –ú–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:</b> {result[2]}\n\n"
            f"<b>üïê –í—Ä–µ–º—è –ø–æ–µ–∑–¥–∫–∏:</b> {time}\n\n"
            f"<b>üë§ –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞:</b> {name}\n\n"
            f"<b>üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω:</b> {phone_number}\n\n"
            f"<b>üì± Telegram:</b> {username_link}"
        )
    else:
        formatted_message = (
            f"<b>üì¨ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–∞</b>\n\n"
            f"<b>üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫:</b> {result[0]}\n\n"
            f"<b>üé´ –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç—É—Ä:</b> {result[1]}\n\n"
            f"<b>üìç –ú–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:</b> {result[2]}\n\n"
            f"<b>üë§ –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞:</b> {name}\n\n"
            f"<b>üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω:</b> {phone_number}\n\n"
            f"<b>üì± Telegram:</b> {username_link}"
        )

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    return formatted_message
